// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using popIT.FoodOrder.Infrastructure.Data;

namespace popIT.FoodOrder.Infrastructure.Data.Migrations
{
    [DbContext(typeof(FoodOrderDbContext))]
    [Migration("20210613055340_AddOrder")]
    partial class AddOrder
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("popIT.FoodOrder.Core.Beverages.Beverage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Beverages");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Garnishes.Garnish", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Garnishes");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Meats.Meat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Meats");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Orders.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("BeverageId")
                        .HasColumnType("int");

                    b.Property<int>("GarnishId")
                        .HasColumnType("int");

                    b.Property<bool>("IsСompleted")
                        .HasColumnType("bit");

                    b.Property<int>("MeatId")
                        .HasColumnType("int");

                    b.Property<DateTime>("OrderTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("SoupId")
                        .HasColumnType("int");

                    b.Property<string>("StudentTicket")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("BeverageId");

                    b.HasIndex("GarnishId");

                    b.HasIndex("MeatId");

                    b.HasIndex("SoupId");

                    b.HasIndex("StudentTicket");

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Soups.Soup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Soups");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Students.Student", b =>
                {
                    b.Property<string>("StudentTicket")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("StudentTicket");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Orders.Order", b =>
                {
                    b.HasOne("popIT.FoodOrder.Core.Beverages.Beverage", "Beverage")
                        .WithMany("Orders")
                        .HasForeignKey("BeverageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("popIT.FoodOrder.Core.Garnishes.Garnish", "Garnish")
                        .WithMany("Orders")
                        .HasForeignKey("GarnishId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("popIT.FoodOrder.Core.Meats.Meat", "Meat")
                        .WithMany("Orders")
                        .HasForeignKey("MeatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("popIT.FoodOrder.Core.Soups.Soup", "Soup")
                        .WithMany("Orders")
                        .HasForeignKey("SoupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("popIT.FoodOrder.Core.Students.Student", "Student")
                        .WithMany("Orders")
                        .HasForeignKey("StudentTicket");

                    b.Navigation("Beverage");

                    b.Navigation("Garnish");

                    b.Navigation("Meat");

                    b.Navigation("Soup");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Beverages.Beverage", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Garnishes.Garnish", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Meats.Meat", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Soups.Soup", b =>
                {
                    b.Navigation("Orders");
                });

            modelBuilder.Entity("popIT.FoodOrder.Core.Students.Student", b =>
                {
                    b.Navigation("Orders");
                });
#pragma warning restore 612, 618
        }
    }
}
